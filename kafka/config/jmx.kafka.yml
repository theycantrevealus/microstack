# groups:
#   - name: kafka-ngcc
#     interval: 15s
#     rules:
#       # Number of brokers alive
#       - record: cc_kafka_brokers
#         expr: count(up{job="kafka-brokers"} == 1)

#       # Total partitions
#       - record: cc_kafka_partitions
#         expr: sum(io_confluent_kafka_server_partition_replicas_count)

#       # Topics (derived from log size metric)
#       - record: cc_kafka_topics
#         expr: count(count by (topic) (io_confluent_kafka_server_log_size))

#       # Leader partitions
#       - record: cc_kafka_leaders
#         expr: sum(io_confluent_kafka_server_leader_count)

#       # Under-replicated partitions
#       - record: cc_kafka_under_replicated
#         expr: sum(io_confluent_kafka_server_partition_under_replicated)
startDelaySeconds: 0
lowercaseOutputName: true
lowercaseOutputLabelNames: true
rules:
  - pattern: "kafka.server<type=(.+), name=(.+)><>(Count|Value)"
    name: "io_confluent_kafka_server_$1_$2"
    type: GAUGE
  - pattern: "kafka.server<type=(.+), name=(.+)><>(OneMinuteRate|FiveMinuteRate|FifteenMinuteRate|MeanRate)"
    name: "io_confluent_kafka_server_$1_$2_rate"
    type: GAUGE
  - pattern: "kafka.controller<type=(.+), name=(.+)><>(Count|Value)"
    name: "io_confluent_kafka_server_controller_$1_$2"
    type: GAUGE
  - pattern: "kafka.network<type=(.+), name=(.+)><>(Count|Value|AverageIdlePercent)"
    name: "io_confluent_kafka_server_network_$1_$2"
    type: GAUGE
  - pattern: "kafka.log<type=(.+), name=(.+), topic=(.+), partition=(.+)><>(Count|Value|Rate|Size)"
    name: "io_confluent_kafka_server_log_$1_$2"
    type: GAUGE
    labels:
      topic: "$3"
      partition: "$4"
  - pattern: "kafka.server<type=ReplicaManager, name=(.+), topic=(.+), partition=(.+)><>(Count|Value)"
    name: "io_confluent_kafka_server_partition_$1"
    labels:
      topic: "$2"
      partition: "$3"
    type: GAUGE
  - pattern: "kafka.server<type=KafkaServer, name=(.+)><>(Count|Value)"
    name: "io_confluent_kafka_server_$1"
    type: GAUGE
  - pattern: "io.confluent.telemetry.http.exporter<type=(.+), name=(.+)><>(Count|Value)"
    name: "io_confluent_telemetry_http_exporter_$1_$2"
    type: GAUGE
